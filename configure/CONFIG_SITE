# CONFIG_SITE

# Make any application-specific changes to the EPICS build
#   configuration variables in this file.
#
# Host/target specific settings can be specified in files named
#   CONFIG_SITE.$(EPICS_HOST_ARCH).Common
#   CONFIG_SITE.Common.$(T_A)
#   CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)

# CHECK_RELEASE controls the consistency checking of the support
#   applications pointed to by the RELEASE* files.
# Normally CHECK_RELEASE should be set to YES.
# Set CHECK_RELEASE to NO to disable checking completely.
# Set CHECK_RELEASE to WARN to perform consistency checking but
#   continue building even if conflicts are found.
CHECK_RELEASE = YES

# Set this when you only want to compile this application
#   for a subset of the cross-compiled target architectures
#   that Base is built for.
#CROSS_COMPILER_TARGET_ARCHS = vxWorks-ppc32

# To install files into a location other than $(TOP) define
#   INSTALL_LOCATION here.
#INSTALL_LOCATION=</absolute/path/to/install/top>

# Set this when the IOC and build host use different paths
#   to the install location. This may be needed to boot from
#   a Microsoft FTP server say, or on some NFS configurations.
#IOCS_APPL_TOP = </IOC's/absolute/path/to/install/top>

# For application debugging purposes, override the HOST_OPT and/
#   or CROSS_OPT settings from base/configure/CONFIG_SITE
#HOST_OPT = NO
#CROSS_OPT = NO

# ------ The following block should be copied to a
#        file called CONFIG_SITE.local and edited/adapted there

# Uncomment and configure *one* of the client library choices


# Path to the Unified Automation OPC UA C++ SDK installation
#UASDK = /opt/opcua/uasdkcppclient-v1.5.3-346/sdk

# How the Unified Automation SDK shared libraries will be deployed
#   SYSTEM = shared libs are in a system location
#   PROVIDED = shared libs are in $(UASDK_SHRLIB_DIR)
#   INSTALL = shared libs are installed (copied) into this module
#   EMBED = link SDK code statically into libopcua,
#           SDK libraries are not required on target system
UASDK_DEPLOY_MODE = PROVIDED
UASDK_LIB_DIR = $(UASDK)/lib
UASDK_SHRLIB_DIR = $(UASDK_LIB_DIR)
# How the Unified Automation SDK libraries were built
UASDK_USE_CRYPTO = YES
UASDK_USE_XMLPARSER = YES


# Path to the Open62541 installation
#OPEN62541 = /opt/opcua/open62541-1.3.8-debian11

# How the Unified Automation SDK shared libraries will be deployed
#   SYSTEM = shared libs are in a system location
#   PROVIDED = shared libs are in $(UASDK_SHRLIB_DIR)
#   INSTALL = shared libs are installed (copied) into this module
#   EMBED = link SDK code statically into libopcua,
#           SDK libraries are not required on target system
OPEN62541_DEPLOY_MODE = EMBED
OPEN62541_LIB_DIR = $(OPEN62541)/lib
OPEN62541_SHRLIB_DIR = $(OPEN62541)/bin
# How the Open62541 libraries were built
OPEN62541_USE_CRYPTO = YES
# Required for structure support
OPEN62541_USE_XMLPARSER = YES

# Windows/MSVC only
# Prerequisites: libxml2 iconv openssl
#LIBXML2 = $(UASDK)/third-party/win64/vs2015/libxml2
#OPENSSL = $(UASDK)/third-party/win64/vs2015/openssl
#LIBXML2 = C:/Users/langer/opcua/libxml2-2.9.3
#ICONV = C:/Users/langer/opcua/iconv-1.14

# Windows/MinGW only
# Location of MSYS2/MinGW64
#MSYSTEM_PREFIX = C:/Users/langer/msys64/mingw64

# ------ End of CONFIG_SITE.local block

# This is preferably done in EPICS Base = global
#USR_CXXFLAGS_Linux += -std=c++11

USR_CXXFLAGS += -DUSE_TYPED_RSET

# Needed for gethostname()
USR_SYS_LIBS_WIN32 += ws2_32

# These allow developers to override the CONFIG_SITE variable
# settings without having to modify the configure/CONFIG_SITE
# file itself.
-include $(TOP)/../CONFIG_SITE.local
-include $(TOP)/../configure/CONFIG_SITE.local
-include $(TOP)/configure/CONFIG_SITE.local
