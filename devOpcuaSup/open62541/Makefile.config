#*************************************************************************
# Copyright (c) 2020 Paul Scherrer Institut.
# This module is distributed subject to a Software License Agreement found
# in file LICENSE that is included with this distribution.
#*************************************************************************

# Author: Dirk Zimoch <dirk.zimoch@psi.ch>
#
# based on the interface for the Unified Automation OPC UA Client SDK
# by Ralph Lange <ralph.lange@gmx.de>

# This is a Makefile fragment, see devOpcuaSup/Makefile.

#=========================================================
# Implementation using open62541 (https://open62541.org/)

SRC_DIRS += $(OPCUA)/open62541
USR_INCLUDES += -I$(OPCUA)/open62541
USR_DBDFLAGS += -I $(OPCUA)/open62541

# Different UASDK bundles have third-party modules in different locations
# and different versions of the openssl library with different library names

ifeq ($(OPEN62541_USE_CRYPTO),YES)
  ifdef OPENSSL
    OPENSSL_INCDIR += $(OPENSSL)/include
    OPENSSL_INCDIR += $(OPENSSL)/inc32
    OPENSSL_INCDIR += $(OPENSSL)/include/openssl
    OPENSSL_INCDIR += $(OPENSSL)/include/crypto
    OPENSSL_LIBDIR += $(OPENSSL)/lib
    OPENSSL_LIBDIR += $(OPENSSL)/out32dl
    USR_INCLUDES += $(addprefix -I,$(wildcard $(OPENSSL_INCDIR)))
    USR_INCLUDES += $(addprefix -I,$(wildcard $(OPENSSL_INCDIR)))
    USR_LDFLAGS_DEFAULT += $(addprefix -L,$(wildcard $(OPENSSL_LIBDIR)))
    USR_LDFLAGS_WIN32   += $(addprefix /LIBPATH:,$(wildcard $(OPENSSL_LIBDIR)))
  endif

  SSL_LIB_DEFAULT = crypto
  SSL_LIB_WIN32 = libcrypto
  USR_SYS_LIBS_DEFAULT += $(SSL_LIB_DEFAULT)
  USR_SYS_LIBS_WIN32 += $(SSL_LIB_WIN32)
  USR_CXXFLAGS += -DHAS_SECURITY
endif

ifeq ($(OPEN62541_USE_XMLPARSER),YES)
  ifdef LIBXML2
    LIBXML2_INCDIR += $(LIBXML2)/include
    LIBXML2_LIBDIR += $(LIBXML2)/lib
    LIBXML2_LIBDIR += $(LIBXML2)/out32dll
    USR_INCLUDES += $(addprefix -I,$(LIBXML2_INCDIR))
    USR_LDFLAGS_DEFAULT += $(addprefix -L,$(wildcard $(LIBXML2_LIBDIR)))
    USR_LDFLAGS_WIN32   += $(addprefix /LIBPATH:,$(wildcard $(LIBXML2_LIBDIR)))
  else
    USR_INCLUDES += -I/usr/include/libxml2
  endif
  XML2_LIB_DEFAULT = xml2
  XML2_LIB_WIN32 = libxml2
  USR_SYS_LIBS_DEFAULT += $(XML2_LIB_DEFAULT)
  USR_SYS_LIBS_WIN32 += $(XML2_LIB_WIN32)
  USR_CXXFLAGS += -DHAS_XMLPARSER
endif

opcua_SRCS += Session.cpp
opcua_SRCS += SessionOpen62541.cpp
opcua_SRCS += Subscription.cpp
opcua_SRCS += SubscriptionOpen62541.cpp
opcua_SRCS += ItemOpen62541.cpp
opcua_SRCS += DataElementOpen62541.cpp

DBD_INSTALLS += opcua.dbd

CFG += RULES_OPCUA
CFG += CONFIG_OPCUA
ifdef T_A
CFG += INCLUDE_OPCUA_$(T_A)
endif

EXPAND_VARS += OPEN62541=$(OPEN62541)
EXPAND_VARS += OPEN62541_DEPLOY_MODE=$(OPEN62541_DEPLOY_MODE)
EXPAND_VARS += OPEN62541_LIB_DIR=$(OPEN62541_LIB_DIR)
EXPAND_VARS += OPEN62541_SHRLIB_DIR=$(OPEN62541_SHRLIB_DIR)
EXPAND_VARS += OPEN62541_USE_CRYPTO=$(OPEN62541_USE_CRYPTO)
EXPAND_VARS += OPEN62541_USE_XMLPARSER=$(OPEN62541_USE_XMLPARSER)

USR_INCLUDES += -I$(OPEN62541)/include
